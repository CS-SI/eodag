[metadata]
name = eodag
description = Earth Observation Data Access Gateway
long_description = file:README.rst
long_description_content_type = text/x-rst
author = CS GROUP - France
author_email = eodag@csgroup.space
url = https://github.com/CS-SI/eodag
license = Apache 2.0
license_files = LICENSE
project_urls =
    Bug Tracker = https://github.com/CS-SI/eodag/issues/
    Documentation = https://eodag.readthedocs.io
    Source Code = https://github.com/CS-SI/eodag
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Natural Language :: English
    License :: OSI Approved :: Apache Software License
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Internet :: WWW/HTTP :: Indexing/Search
    Topic :: Scientific/Engineering :: GIS
    Topic :: Software Development :: Libraries :: Python Modules

[options]
packages = find:
include_package_data = True
python_requires = >=3.6
install_requires =
    annotated-types
    boto3
    botocore
    click
    geojson
    jsonpath-ng < 1.6.0
    lxml
    orjson < 3.10.0;python_version>='3.12' and platform_system=='Windows'
    orjson;python_version<'3.12' or platform_system!='Windows'
    pydantic >= 2.1.0
    pydantic_core
    pyproj >= 2.1.0
    pyshp
    pystac >= 1.0.0b1
    python-dateutil
    PyYAML
    requests
    setuptools
    shapely >= 2.0.0
    stream-zip
    tqdm
    typing_extensions >= 4.8.0
    urllib3
    Whoosh

[options.extras_require]
all =
    eodag[all-providers,csw,server,tutorials]
all-providers =
    eodag[ecmwf,usgs]
csw =
    OWSLib >=0.27.1
ecmwf =
    ecmwf-api-client
usgs =
    usgs >= 0.3.1
server =
    fastapi >= 0.93.0
    pygeofilter
    starlette
    uvicorn[standard]
    pydantic-settings
    cachetools

notebook = tqdm[notebook]
tutorials =
    eodag[notebook]
    eodag-cube >= 0.2.0
    jupyter
    ipyleaflet >= 0.10.0
    ipywidgets
    matplotlib
    folium
    imageio
    rasterio
    netcdf4

dev =
    eodag[all-providers,csw,server]
    pytest
    pytest-cov
    # pytest-html max version set and py requirement added
    # until https://github.com/pytest-dev/pytest-html/issues/559 is fixed
    py >= 1.8.2
    pytest-html < 3.2.0
    pytest-xdist
    pytest-socket
    pytest-instafail
    tox
    faker
    moto
    twine
    wheel
    flake8
    pre-commit
    responses < 0.24.0
    fastapi[all]
    stdlib-list
    boto3-stubs[essential]
    types-lxml
docs =
    eodag[all]
    sphinx
    sphinx-book-theme
    sphinx-copybutton
    sphinx-tabs
    nbsphinx

[options.packages.find]
exclude =
    *.tests
    *.tests.*
    tests.*
    tests

[options.package_data]
* =
    LICENSE
    NOTICE
    py.typed

[options.entry_points]
console_scripts =
    eodag = eodag.cli:eodag
eodag.plugins.api =
    UsgsApi = eodag.plugins.apis.usgs:UsgsApi [usgs]
    EcmwfApi = eodag.plugins.apis.ecmwf:EcmwfApi [ecmwf]
eodag.plugins.auth =
    GenericAuth = eodag.plugins.authentication.generic:GenericAuth
    HTTPHeaderAuth = eodag.plugins.authentication.header:HTTPHeaderAuth
    AwsAuth = eodag.plugins.authentication.aws_auth:AwsAuth
    OAuth = eodag.plugins.authentication.oauth:OAuth
    TokenAuth = eodag.plugins.authentication.token:TokenAuth
    OIDCAuthorizationCodeFlowAuth = eodag.plugins.authentication.openid_connect:OIDCAuthorizationCodeFlowAuth
    OIDCTokenExchangeAuth = eodag.plugins.authentication.token_exchange:OIDCTokenExchangeAuth
    KeycloakOIDCPasswordAuth = eodag.plugins.authentication.keycloak:KeycloakOIDCPasswordAuth
    HttpQueryStringAuth = eodag.plugins.authentication.qsauth:HttpQueryStringAuth
    SASAuth = eodag.plugins.authentication.sas_auth:SASAuth
eodag.plugins.crunch =
    FilterLatestIntersect = eodag.plugins.crunch.filter_latest_intersect:FilterLatestIntersect
    FilterLatestByName = eodag.plugins.crunch.filter_latest_tpl_name:FilterLatestByName
    FilterOverlap = eodag.plugins.crunch.filter_overlap:FilterOverlap
    FilterProperty = eodag.plugins.crunch.filter_property:FilterProperty
    FilterDate = eodag.plugins.crunch.filter_date:FilterDate
eodag.plugins.download =
    AwsDownload = eodag.plugins.download.aws:AwsDownload
    HTTPDownload = eodag.plugins.download.http:HTTPDownload
    S3RestDownload = eodag.plugins.download.s3rest:S3RestDownload
    CreodiasS3Download = eodag.plugins.download.creodias_s3:CreodiasS3Download
eodag.plugins.search =
    CSWSearch = eodag.plugins.search.csw:CSWSearch [csw]
    QueryStringSearch = eodag.plugins.search.qssearch:QueryStringSearch
    ODataV4Search = eodag.plugins.search.qssearch:ODataV4Search
    PostJsonSearch = eodag.plugins.search.qssearch:PostJsonSearch
    StacSearch = eodag.plugins.search.qssearch:StacSearch
    StaticStacSearch = eodag.plugins.search.static_stac_search:StaticStacSearch
    BuildSearchResult = eodag.plugins.search.build_search_result:BuildSearchResult
    BuildPostSearchResult = eodag.plugins.search.build_search_result:BuildPostSearchResult
    DataRequestSearch = eodag.plugins.search.data_request_search:DataRequestSearch
    CreodiasS3Search = eodag.plugins.search.creodias_s3:CreodiasS3Search
    CopMarineSearch = eodag.plugins.search.cop_marine:CopMarineSearch

[flake8]
ignore = E203, W503
max_line_length = 120
exclude =
    .git,
    __pycache__,
    .tox,
    build,
    dist,
    docs/conf.py,
    tests/context.py

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
ensure_newline_before_comments = True
known_first_party = eodag,tests
known_third_party = concurrent.futures
default_section = THIRDPARTY
skip =
    .git,
    __pycache__,
    .tox,
    build,
    dist,
    docs/conf.py,
    tests/utils.py,
    eodag/utils/__init__.py,

[pydocstyle]
# Check for docstring presence only
select = D1
add_ignore = D107,D100,D105
# Don't require docstrings for tests or setup
match = (?!test|setup).*\.py
