name: Fetch collections

on:
  workflow_dispatch:
  push:
    branches: [develop]
  schedule:
    - cron: "0 6 * * *"

jobs:
  fetch-collections:
    name: Fetch providers for new collections
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4
      with:
        # Get history and tags for SCM versioning to work
        fetch-depth: 0
    - name: Install the latest version of uv with cache enabled
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: ""
    - name: Install eodag in venv
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install ".[all-providers]"
    - name: Fetch and update external collections reference
      env:
        EODAG__WEKEO_MAIN__AUTH__CREDENTIALS__USERNAME: ${{ secrets.EODAG__WEKEO_MAIN__AUTH__CREDENTIALS__USERNAME }}
        EODAG__WEKEO_MAIN__AUTH__CREDENTIALS__PASSWORD: ${{ secrets.EODAG__WEKEO_MAIN__AUTH__CREDENTIALS__PASSWORD }}
      run: |
        source .venv/bin/activate
        export JSON_OUTPUT_FILE="eodag/resources/ext_collections.json"
        export JSON_REF_FILE=$(python -c "import eodag; print(eodag.config.EXT_COLLECTIONS_CONF_URI)")
        eodag -vvv discover --storage ${JSON_OUTPUT_FILE}
        # add empty line at end of file
        sed -i -e '$a\' ${JSON_OUTPUT_FILE}
        git config user.name "github-actions[bot]"
        git config user.email "'github-actions[bot]@users.noreply.github.com"
        git add "${JSON_OUTPUT_FILE}"
        git commit -m "chore: update external collections reference" || exit 0
        echo "Update external collections reference from daily fetch. See [Python API User Guide / Collections discovery](https://eodag.readthedocs.io/en/latest/notebooks/api_user_guide/1_providers_products_available.html#Collections-discovery)" >> $GITHUB_STEP_SUMMARY
        echo '### Changed file' >> $GITHUB_STEP_SUMMARY
        git show --name-only --format=tformat: >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        COMMIT_SHA=$(git rev-parse HEAD)
        COMMIT_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${COMMIT_SHA}"
        echo "commit [${COMMIT_SHA}](${COMMIT_URL})" >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        # Download reference file for comparison
        curl -s "${JSON_REF_FILE}" -o /tmp/ref_collections.json
        # Use our Python comparison script for better diff analysis
        if python utils/ext_collections_cmp.py /tmp/ref_collections.json "${JSON_OUTPUT_FILE}" >> $GITHUB_STEP_SUMMARY; then
          echo "✅ Comparison completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Comparison script had issues, but output may still be useful" >> $GITHUB_STEP_SUMMARY
        fi
        # Create a separate file for PR body (to avoid GitHub env var size limits)
        cp $GITHUB_STEP_SUMMARY /tmp/pr_body.md
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        branch: external-collections-ref-update
        delete-branch: true
        title: 'chore: update external collections reference'
        body-path: /tmp/pr_body.md
        labels: |
          automated pr
