name: Run Tests

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  schedule:
    - cron: "0 7 * * 1"
  workflow_dispatch:

jobs:
  lint:
    name: Linting (pre-commit)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
    - name: Run pre-commit action
      uses: pre-commit/action@v2.0.0

  tests:
    name: Test it!
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, "3.11"]
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Get current week number
      id: get-week
      shell: bash
      run: echo "::set-output name=week::$(date +'%V')"
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ steps.get-week.outputs.week }}-${{ hashFiles('setup.py') }}
    - name: Install tox and tox-gh-actions
      run: python -m pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results-python${{ matrix.python-version }}
        path: |
          test-reports/junit-report.xml
          test-reports/coverage.xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: tests
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      continue-on-error: true
      with:
        files: artifacts/**/*junit-report.xml
    - name: Publish Coverage Report
      uses: 5monkeys/cobertura-action@master
      if: ${{ github.event_name == 'pull_request' }}
      with:
        path: artifacts/**/*coverage.xml
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        minimum_coverage: 70
        fail_below_threshold: false
        only_changed_files: true

  build-docs:
    name: Build the docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Get current week number
      id: get-week
      shell: bash
      run: echo "::set-output name=week::$(date +'%V')"
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ steps.get-week.outputs.week }}-${{ hashFiles('setup.py') }}
    - name: Install pandoc
      run: |
        sudo apt update
        sudo apt install -y make pandoc
    - name: Install tox
      run: |
        python -m pip install tox
    - name: Testing with tox
      run: python -m tox -e docs

  check-pypi:
    name: Long description check for PyPI
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Get current week number
      id: get-week
      shell: bash
      run: echo "::set-output name=week::$(date +'%V')"
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ steps.get-week.outputs.week }}-${{ hashFiles('setup.py') }}
    - name: Install tox and sphinx (to have rst2html.py utility available)
      run: |
        python -m pip install tox sphinx
    - name: Testing with tox
      run: python -m tox -e pypi
